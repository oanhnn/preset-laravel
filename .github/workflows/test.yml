name: Test preset

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ~/.composer
        key: cache-dependencies

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Run lint
      run: npm run lint

    - name: Run tests
      run: npm test

  generate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        options:
          - '--docker'
          - '--vuejs'
          - '--gitlab'
          - '--github'
          - '--tailwindcss'
          - '--eslint'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setting up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        extensions: curl, dom, json, mbstring, openssl
        tools: phpcs, composer, phpunit

    - name: Setting up NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ~/.composer
        key: cache-dependencies

    - name: Create project with composer
      run: composer create-project --prefer-dist laravel/laravel ./ci-test

    - name: Apply preset
      run: npx use-preset .. ${{ matrix.options }}
      working-directory: ./ci-test

    - name: Config environment
      run: |
        if [[ ! -f .env ]]; then
          cp .env.example .env
        fi
        sed -i "s|^REDIS_PASSWORD=.*|REDIS_PASSWORD=password|g" .env
        php artisan key:generate
      working-directory: ./ci-test

    - name: Run lint
      if: contains(matrix.options, '--eslint')
      run: npn run lint
      working-directory: ./ci-test

    - name: Run coding style check
      if: contains(matrix.options, '--phpcs')
      run: phpcs --standard=phpcs.xml.dist
      working-directory: ./ci-test

    - name: Run with docker
      if: contains(matrix.options, '--docker')
      run: |
        docker-compose up -d
        sleep 20s
        curl http://127.0.0.1/
        docker-compose down
      working-directory: ./ci-test

    - name: Run build assets
      run: npm run production

    - name: Run tests in the generated project
      run: php artisan test
      working-directory: ./ci-test
