version: '3.5'

# =========================================
# Networks
# =========================================
networks:
  mysql-net: {}
  redis-net: {}
  proxy-net: {}

# =========================================
# Volumes
# =========================================
volumes:
  mysql-vol: {}
  redis-vol: {}

# =========================================
# Services
# =========================================
services:
  redis:
    image: redis:alpine
    command:
      - redis-server
      - --appendonly=yes
      - --requirepass=${REDIS_PASSWORD:-password}
      - --bind=0.0.0.0
      - --port=${REDIS_PORT:-6379}
    networks:
      - redis-net
    ports:
      - ${REDIS_PORT:-6379}:${REDIS_PORT:-6379}
    restart: unless-stopped
    volumes:
      - redis-vol:/data

  mysql:
    image: mysql:8.0
    # PDO Doesn't support MySQL 8 caching_sha2_password Authentication
    # @see https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    command:
      - mysqld
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --bind-address=0.0.0.0
      - --port=${DB_PORT:-3306}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_USER:          ${DB_USERNAME:-dev}
      MYSQL_PASSWORD:      ${DB_PASSWORD:-devpass}
      MYSQL_DATABASE:      ${DB_DATABASE:-laravel}
    networks:
      - mysql-net
    ports:
      - ${DB_PORT:-3306}:${DB_PORT:-3306}
    restart: unless-stopped
    volumes:
      - mysql-vol:/var/lib/mysql
      # - .docker/mysql:/docker-entrypoint-initdb.d

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - php
    networks:
      - proxy-net
    ports:
      - 80:80
      # - 443:443
    volumes:
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # - .docker/nginx/keys:/etc/nginx/ssl
      - ./public:/var/www/public:ro

  php:
    image: oanhnn/laravel:edge
    depends_on:
      - mysql
      - redis
    environment:
      REDIS_HOST:    redis
      DB_HOST:       mysql
      LOG_CHANNEL:   stderr
    networks:
      - mysql-net
      - redis-net
      - proxy-net
    restart: unless-stopped
    volumes:
      - .:/var/www
      - .env:/var/www/.env
      - .docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini

  schedule:
    image: oanhnn/laravel:edge
    command: artisan schedule:run --verbose --no-interaction --sleep=60
    depends_on:
      - mysql
      - redis
    environment:
      REDIS_HOST:    redis
      DB_HOST:       mysql
      LOG_CHANNEL:   stderr
    networks:
      - mysql-net
      - redis-net
    restart: unless-stopped
    volumes:
      - .:/var/www
      - .env:/var/www/.env

  horizon:
    image: oanhnn/laravel:edge
    command: artisan queue:work
    depends_on:
      - mysql
      - redis
    environment:
      REDIS_HOST:    redis
      DB_HOST:       mysql
      LOG_CHANNEL:   stderr
    networks:
      - mysql-net
      - redis-net
    restart: unless-stopped
    volumes:
      - .:/var/www
      - .env:/var/www/.env
